components:
  schemas:
    Rol_user:
      type: object
      properties:
        nombre: {"type":"string","description":"Role name"}
        orden: {"type":"number","description":"Role order"}
        createdAt: {"type":"date","description":"createdAt field"}
        updatedAt: {"type":"date","description":"updatedAt field"}

tags:
  - name: Rol_user
    description: Rol_user managing API

paths:
  /api/rol_user:
    get:
      summary: Retrieve a list of Rol_user
      tags:
        - Rol_user
      security:
       - Authorization: []
      responses:
        '200':
          description: A list of Rol_user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rol_user'

    post:
      summary: Create a new Rol_user
      tags:
        - Rol_user
      security:
       - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rol_user'
      responses:
        '200':
          description: The Rol_user was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rol_user'

  /api/rol_user/{id}:
    get:
      summary: Get a Rol_user by ID
      tags:
        - Rol_user
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Rol_user ID
      responses:
        '200':
          description: The Rol_user description by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rol_user'
        '404':
          description: The Rol_user was not found

    put:
      summary: Update a Rol_user by ID
      tags:
        - Rol_user
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Rol_user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rol_user'
      responses:
        '200':
          description: The Rol_user was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rol_user'

    delete:
      summary: Delete a Rol_user by ID
      tags:
        - Rol_user
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Rol_user ID
      responses:
        '200':
          description: The Rol_user was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rol_user'