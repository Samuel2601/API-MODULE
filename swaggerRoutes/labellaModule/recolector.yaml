components:
  schemas:
    Recolector:
      type: object
      properties:
        dateOnly: {"type":"string","description":"dateOnly field"}
        deviceId: {"type":"string","description":"Collector ID API EXTERNAL"}
        funcionario: {"type":"objectid","description":"Funcionario a cargo del veh√≠culo"}
        externo: {"type":"objectid","description":"externo field"}
        ruta: {"type":"array","items":{"type":"string"},"description":"ruta field"}
        puntos_recoleccion: {"type":"array","items":{"type":"string"},"description":"puntos_recoleccion field"}
        capacidad_retorno: {"type":"array","items":{"type":"string"},"description":"capacidad_retorno field"}
        view: {"type":"boolean","description":"View status"}
        view_id: {"type":"objectid","description":"Viewed by"}
        view_date: {"type":"date","description":"View date"}
        createdAt: {"type":"date","description":"createdAt field"}
        updatedAt: {"type":"date","description":"updatedAt field"}

tags:
  - name: Recolector
    description: Recolector managing API

paths:
  /recolector:
    get:
      summary: Retrieve a list of Recolector
      tags:
        - Recolector
      security:
       - Authorization: []
      responses:
        '200':
          description: A list of Recolector
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recolector'

    post:
      summary: Create a new Recolector
      tags:
        - Recolector
      security:
       - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recolector'
      responses:
        '200':
          description: The Recolector was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recolector'

  /recolector/{id}:
    get:
      summary: Get a Recolector by ID
      tags:
        - Recolector
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Recolector ID
      responses:
        '200':
          description: The Recolector description by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recolector'
        '404':
          description: The Recolector was not found

    put:
      summary: Update a Recolector by ID
      tags:
        - Recolector
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Recolector ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recolector'
      responses:
        '200':
          description: The Recolector was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recolector'

    delete:
      summary: Delete a Recolector by ID
      tags:
        - Recolector
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Recolector ID
      responses:
        '200':
          description: The Recolector was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recolector'