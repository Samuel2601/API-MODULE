components:
  schemas:
    Recolector:
      type: object
      properties:
        id_api: {"type":"string","description":"Collector ID API EXTERNAL"}
        nombre: {"type":"string","description":"Collector name API EXTERNAL"}
        comentarios: {"type":"array","items":{"type":"string"},"description":"comentarios field"}
        createdAt: {"type":"date","description":"createdAt field"}
        updatedAt: {"type":"date","description":"updatedAt field"}

tags:
  - name: Recolector
    description: Recolector managing API

paths:
  /api/recolector:
    get:
      summary: Retrieve a list of Recolector
      tags:
        - Recolector
      security:
       - Authorization: []
      responses:
        '200':
          description: A list of Recolector
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recolector'

    post:
      summary: Create a new Recolector
      tags:
        - Recolector
      security:
       - Authorization: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recolector'
      responses:
        '200':
          description: The Recolector was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recolector'

  /api/recolector/{id}:
    get:
      summary: Get a Recolector by ID
      tags:
        - Recolector
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Recolector ID
      responses:
        '200':
          description: The Recolector description by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recolector'
        '404':
          description: The Recolector was not found

    put:
      summary: Update a Recolector by ID
      tags:
        - Recolector
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Recolector ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recolector'
      responses:
        '200':
          description: The Recolector was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recolector'

    delete:
      summary: Delete a Recolector by ID
      tags:
        - Recolector
      security:
       - Authorization: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The Recolector ID
      responses:
        '200':
          description: The Recolector was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recolector'